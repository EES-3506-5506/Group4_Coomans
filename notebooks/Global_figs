{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "f635d859-ea98-4456-9b2b-d7e8b8433800",
   "metadata": {},
   "outputs": [],
   "source": [
    "from matplotlib import pyplot as plt\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import xarray as xr\n",
    "import zarr  # to read in Zarr format\n",
    "import gcsfs # to read google cloud data\n",
    "import momlevel as ml\n",
    "import cftime\n",
    "import cmocean"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "602bc409-50f8-473a-84d5-e2d992ba31e7",
   "metadata": {},
   "outputs": [],
   "source": [
    "xr.set_options(display_style='html')\n",
    "%matplotlib inline                           \n",
    "%config InlineBackend.figure_format='retina' \n",
    "plt.rcParams['figure.figsize'] = 12,6  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "76943830-6590-4f80-962d-220f15a6e186",
   "metadata": {},
   "outputs": [],
   "source": [
    "google_cloud_cmip6 = pd.read_csv('https://storage.googleapis.com/cmip6/cmip6-zarr-consolidated-stores.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c85b9fb3-0b71-484f-8e78-53a6145fc653",
   "metadata": {},
   "outputs": [],
   "source": [
    "O2_SSP126_data = google_cloud_cmip6.query(\n",
    "    \"activity_id=='ScenarioMIP' & \\\n",
    "    table_id == 'Omon' & \\\n",
    "    variable_id == 'o2' & \\\n",
    "    experiment_id == 'ssp126' & \\\n",
    "    institution_id == 'NOAA-GFDL' &  \\\n",
    "    source_id == 'GFDL-ESM4' & \\\n",
    "    grid_label == 'gr' & \\\n",
    "    member_id == 'r1i1p1f1'\")\n",
    "\n",
    "O2_SSP245_data = google_cloud_cmip6.query(\n",
    "    \"activity_id=='ScenarioMIP' & \\\n",
    "    table_id == 'Omon' & \\\n",
    "    variable_id == 'o2' & \\\n",
    "    experiment_id == 'ssp245' & \\\n",
    "    institution_id == 'NOAA-GFDL' &  \\\n",
    "    source_id == 'GFDL-ESM4' & \\\n",
    "    grid_label == 'gr' & \\\n",
    "    member_id == 'r1i1p1f1'\")\n",
    "\n",
    "O2_SSP585_data = google_cloud_cmip6.query(\n",
    "    \"activity_id=='ScenarioMIP' & \\\n",
    "    table_id == 'Omon' & \\\n",
    "    variable_id == 'o2' & \\\n",
    "    experiment_id == 'ssp585' & \\\n",
    "    institution_id == 'NOAA-GFDL' &  \\\n",
    "    source_id == 'GFDL-ESM4' & \\\n",
    "    grid_label == 'gr' & \\\n",
    "    member_id == 'r1i1p1f1'\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "1ae789fa-f6db-4384-854c-ec3c37910a3d",
   "metadata": {},
   "outputs": [],
   "source": [
    "o2sat_ssp126_data = google_cloud_cmip6.query(\n",
    "    \"activity_id=='ScenarioMIP' & \\\n",
    "    table_id == 'Omon' & \\\n",
    "    variable_id == 'o2sat' & \\\n",
    "    experiment_id == 'ssp126' & \\\n",
    "    institution_id == 'NOAA-GFDL' &  \\\n",
    "    source_id == 'GFDL-ESM4' & \\\n",
    "    grid_label == 'gr' & \\\n",
    "    member_id == 'r1i1p1f1'\")\n",
    "\n",
    "o2sat_ssp245_data = google_cloud_cmip6.query(\n",
    "    \"activity_id=='ScenarioMIP' & \\\n",
    "    table_id == 'Omon' & \\\n",
    "    variable_id == 'o2sat' & \\\n",
    "    experiment_id == 'ssp245' & \\\n",
    "    institution_id == 'NOAA-GFDL' &  \\\n",
    "    source_id == 'GFDL-ESM4' & \\\n",
    "    grid_label == 'gr' & \\\n",
    "    member_id == 'r1i1p1f1'\")\n",
    "\n",
    "o2sat_ssp585_data = google_cloud_cmip6.query(\n",
    "    \"activity_id=='ScenarioMIP' & \\\n",
    "    table_id == 'Omon' & \\\n",
    "    variable_id == 'o2sat' & \\\n",
    "    experiment_id == 'ssp585' & \\\n",
    "    institution_id == 'NOAA-GFDL' &  \\\n",
    "    source_id == 'GFDL-ESM4' & \\\n",
    "    grid_label == 'gr' & \\\n",
    "    member_id == 'r1i1p1f1'\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "e73dfddf-ae75-4e5d-bbd9-f2c84f27e8fb",
   "metadata": {},
   "outputs": [],
   "source": [
    "gcs = gcsfs.GCSFileSystem(token='anon')\n",
    "#datasets for O2\n",
    "zstore_O2_SSP126_data = O2_SSP126_data.zstore.values[-1]\n",
    "zstore_O2_SSP245_data = O2_SSP245_data.zstore.values[-1]\n",
    "zstore_O2_SSP585_data = O2_SSP585_data.zstore.values[-1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b1239fdd-b477-4494-83be-06e11f181a59",
   "metadata": {},
   "outputs": [],
   "source": [
    "# create a mutable-mapping-style interface to the store\n",
    "mapper_O2_SSP126 = gcs.get_mapper(zstore_O2_SSP126_data)\n",
    "# open the dataset using xarray and zarr\n",
    "O2_SSP126 = xr.open_zarr(mapper_O2_SSP126, \n",
    "                                consolidated=True,use_cftime=True).o2.rename({'lat':'latitude',\n",
    "                                                             'lon':'longitude'})\n",
    "mapper_O2_SSP245 = gcs.get_mapper(zstore_O2_SSP245_data)\n",
    "O2_SSP245 = xr.open_zarr(mapper_O2_SSP245, \n",
    "                                consolidated=True,use_cftime=True).o2.rename({'lat':'latitude',\n",
    "                                                             'lon':'longitude'})\n",
    "mapper_O2_SSP585 = gcs.get_mapper(zstore_O2_SSP585_data)\n",
    "O2_SSP585 = xr.open_zarr(mapper_O2_SSP585, \n",
    "                                consolidated=True,use_cftime=True).o2.rename({'lat':'latitude',\n",
    "                                                             'lon':'longitude'})\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "7545f2e0-09b3-4588-9d9a-4c7d6e747308",
   "metadata": {},
   "outputs": [],
   "source": [
    "zstore_o2sat_ssp126 = o2sat_ssp126_data.zstore.values[-1]\n",
    "zstore_o2sat_ssp245 = o2sat_ssp245_data.zstore.values[-1]\n",
    "zstore_o2sat_ssp585 = o2sat_ssp585_data.zstore.values[-1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "d120d33f-a8de-43a7-b30d-fa6e218598c8",
   "metadata": {},
   "outputs": [],
   "source": [
    "mapper_o2sat_ssp126 = gcs.get_mapper(zstore_o2sat_ssp126)\n",
    "O2_sat_SSP126 = xr.open_zarr(mapper_o2sat_ssp126, \n",
    "                                consolidated=True,use_cftime=True).o2sat.rename({'lat':'latitude',\n",
    "                                                             'lon':'longitude'})\n",
    "mapper_o2sat_ssp245 = gcs.get_mapper(zstore_o2sat_ssp245)\n",
    "O2_sat_SSP245 = xr.open_zarr(mapper_o2sat_ssp245, \n",
    "                                consolidated=True,use_cftime=True).o2sat.rename({'lat':'latitude',\n",
    "                                                             'lon':'longitude'})\n",
    "mapper_o2sat_ssp585 = gcs.get_mapper(zstore_o2sat_ssp585)\n",
    "O2_sat_SSP585 = xr.open_zarr(mapper_o2sat_ssp585, \n",
    "                                consolidated=True,use_cftime=True).o2sat.rename({'lat':'latitude',\n",
    "                                                             'lon':'longitude'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "227b8896-61d9-4f2e-9e8b-9d1226c652de",
   "metadata": {},
   "outputs": [],
   "source": [
    "#difference plots for 02\n",
    "diff_O2_SSP126=(O2_SSP126.sel(time=slice('2081-01-16','2100-12-16')).mean(dim='time'))-(\n",
    "    O2_SSP126.sel(time=slice('2015-01-16','2025-12-16')).mean(dim='time'))\n",
    "\n",
    "diff_O2_SSP245=(O2_SSP245.sel(time=slice('2081-01-16','2100-12-16')).mean(dim='time'))-(\n",
    "    O2_SSP245.sel(time=slice('2015-01-16','2025-12-16')).mean(dim='time'))\n",
    "\n",
    "diff_O2_SSP585=(O2_SSP585.sel(time=slice('2081-01-16','2100-12-16')).mean(dim='time'))-(\n",
    "    O2_SSP585.sel(time=slice('2015-01-16','2025-12-16')).mean(dim='time'))\n",
    "\n",
    "#difference plots for 02sat\n",
    "diff_O2sat_SSP126=(O2_sat_SSP126.sel(time=slice('2081-01-16','2100-12-16')).mean(dim='time'))-(\n",
    "    O2_sat_SSP126.sel(time=slice('2015-01-16','2025-12-16')).mean(dim='time'))\n",
    "\n",
    "diff_O2sat_SSP245=(O2_sat_SSP245.sel(time=slice('2081-01-16','2100-12-16')).mean(dim='time'))-(\n",
    "    O2_sat_SSP245.sel(time=slice('2015-01-16','2025-12-16')).mean(dim='time'))\n",
    "\n",
    "diff_O2sat_SSP585=(O2_sat_SSP585.sel(time=slice('2081-01-16','2100-12-16')).mean(dim='time'))-(\n",
    "    O2_sat_SSP585.sel(time=slice('2015-01-16','2025-12-16')).mean(dim='time'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "5ffe00ab-dfd1-473c-a7cc-ee3916742cd4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=dark],\n",
       "body[data-theme=dark],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1F1F1F;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block !important;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-index-preview {\n",
       "  grid-column: 2 / 5;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data,\n",
       ".xr-index-data-in:checked ~ .xr-index-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-index-name div,\n",
       ".xr-index-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2,\n",
       ".xr-no-icon {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray (time: 1032, lev: 35, latitude: 180, longitude: 360)&gt;\n",
       "dask.array&lt;sub, shape=(1032, 35, 180, 360), dtype=float32, chunksize=(13, 35, 180, 360), chunktype=numpy.ndarray&gt;\n",
       "Coordinates:\n",
       "  * latitude   (latitude) float64 -89.5 -88.5 -87.5 -86.5 ... 87.5 88.5 89.5\n",
       "  * lev        (lev) float64 2.5 10.0 20.0 32.5 ... 5e+03 5.5e+03 6e+03 6.5e+03\n",
       "  * longitude  (longitude) float64 0.5 1.5 2.5 3.5 ... 356.5 357.5 358.5 359.5\n",
       "  * time       (time) object 2015-01-16 12:00:00 ... 2100-12-16 12:00:00</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span class='xr-has-index'>time</span>: 1032</li><li><span class='xr-has-index'>lev</span>: 35</li><li><span class='xr-has-index'>latitude</span>: 180</li><li><span class='xr-has-index'>longitude</span>: 360</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-d7ee2b44-7d44-4899-88fe-66547410f584' class='xr-array-in' type='checkbox' checked><label for='section-d7ee2b44-7d44-4899-88fe-66547410f584' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>dask.array&lt;chunksize=(13, 35, 180, 360), meta=np.ndarray&gt;</span></div><div class='xr-array-data'><table>\n",
       "    <tr>\n",
       "        <td>\n",
       "            <table style=\"border-collapse: collapse;\">\n",
       "                <thead>\n",
       "                    <tr>\n",
       "                        <td> </td>\n",
       "                        <th> Array </th>\n",
       "                        <th> Chunk </th>\n",
       "                    </tr>\n",
       "                </thead>\n",
       "                <tbody>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Bytes </th>\n",
       "                        <td> 8.72 GiB </td>\n",
       "                        <td> 112.47 MiB </td>\n",
       "                    </tr>\n",
       "                    \n",
       "                    <tr>\n",
       "                        <th> Shape </th>\n",
       "                        <td> (1032, 35, 180, 360) </td>\n",
       "                        <td> (13, 35, 180, 360) </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Dask graph </th>\n",
       "                        <td colspan=\"2\"> 143 chunks in 7 graph layers </td>\n",
       "                    </tr>\n",
       "                    <tr>\n",
       "                        <th> Data type </th>\n",
       "                        <td colspan=\"2\"> float32 numpy.ndarray </td>\n",
       "                    </tr>\n",
       "                </tbody>\n",
       "            </table>\n",
       "        </td>\n",
       "        <td>\n",
       "        <svg width=\"492\" height=\"110\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"25\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"3\" y1=\"0\" x2=\"3\" y2=\"25\" />\n",
       "  <line x1=\"6\" y1=\"0\" x2=\"6\" y2=\"25\" />\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"25\" />\n",
       "  <line x1=\"13\" y1=\"0\" x2=\"13\" y2=\"25\" />\n",
       "  <line x1=\"18\" y1=\"0\" x2=\"18\" y2=\"25\" />\n",
       "  <line x1=\"21\" y1=\"0\" x2=\"21\" y2=\"25\" />\n",
       "  <line x1=\"26\" y1=\"0\" x2=\"26\" y2=\"25\" />\n",
       "  <line x1=\"29\" y1=\"0\" x2=\"29\" y2=\"25\" />\n",
       "  <line x1=\"33\" y1=\"0\" x2=\"33\" y2=\"25\" />\n",
       "  <line x1=\"36\" y1=\"0\" x2=\"36\" y2=\"25\" />\n",
       "  <line x1=\"40\" y1=\"0\" x2=\"40\" y2=\"25\" />\n",
       "  <line x1=\"43\" y1=\"0\" x2=\"43\" y2=\"25\" />\n",
       "  <line x1=\"48\" y1=\"0\" x2=\"48\" y2=\"25\" />\n",
       "  <line x1=\"52\" y1=\"0\" x2=\"52\" y2=\"25\" />\n",
       "  <line x1=\"55\" y1=\"0\" x2=\"55\" y2=\"25\" />\n",
       "  <line x1=\"59\" y1=\"0\" x2=\"59\" y2=\"25\" />\n",
       "  <line x1=\"62\" y1=\"0\" x2=\"62\" y2=\"25\" />\n",
       "  <line x1=\"66\" y1=\"0\" x2=\"66\" y2=\"25\" />\n",
       "  <line x1=\"71\" y1=\"0\" x2=\"71\" y2=\"25\" />\n",
       "  <line x1=\"75\" y1=\"0\" x2=\"75\" y2=\"25\" />\n",
       "  <line x1=\"78\" y1=\"0\" x2=\"78\" y2=\"25\" />\n",
       "  <line x1=\"81\" y1=\"0\" x2=\"81\" y2=\"25\" />\n",
       "  <line x1=\"85\" y1=\"0\" x2=\"85\" y2=\"25\" />\n",
       "  <line x1=\"89\" y1=\"0\" x2=\"89\" y2=\"25\" />\n",
       "  <line x1=\"93\" y1=\"0\" x2=\"93\" y2=\"25\" />\n",
       "  <line x1=\"97\" y1=\"0\" x2=\"97\" y2=\"25\" />\n",
       "  <line x1=\"101\" y1=\"0\" x2=\"101\" y2=\"25\" />\n",
       "  <line x1=\"104\" y1=\"0\" x2=\"104\" y2=\"25\" />\n",
       "  <line x1=\"108\" y1=\"0\" x2=\"108\" y2=\"25\" />\n",
       "  <line x1=\"111\" y1=\"0\" x2=\"111\" y2=\"25\" />\n",
       "  <line x1=\"116\" y1=\"0\" x2=\"116\" y2=\"25\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"25\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.0,0.0 120.0,0.0 120.0,25.412616514582485 0.0,25.412616514582485\" style=\"fill:#8B4903A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"45.412617\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >1032</text>\n",
       "  <text x=\"140.000000\" y=\"12.706308\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,12.706308)\">1</text>\n",
       "\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"190\" y1=\"0\" x2=\"208\" y2=\"18\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"190\" y1=\"41\" x2=\"208\" y2=\"60\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"190\" y1=\"0\" x2=\"190\" y2=\"41\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"208\" y1=\"18\" x2=\"208\" y2=\"60\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"190.0,0.0 208.89940512589084,18.899405125890844 208.89940512589084,60.31081838089534 190.0,41.4114132550045\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"190\" y1=\"0\" x2=\"234\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"208\" y1=\"18\" x2=\"252\" y2=\"18\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"190\" y1=\"0\" x2=\"208\" y2=\"18\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"234\" y1=\"0\" x2=\"252\" y2=\"18\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"190.0,0.0 234.02584342401286,0.0 252.9252485499037,18.899405125890844 208.89940512589084,18.899405125890844\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"208\" y1=\"18\" x2=\"252\" y2=\"18\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"208\" y1=\"60\" x2=\"252\" y2=\"60\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"208\" y1=\"18\" x2=\"208\" y2=\"60\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"252\" y1=\"18\" x2=\"252\" y2=\"60\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"208.89940512589084,18.899405125890844 252.9252485499037,18.899405125890844 252.9252485499037,60.31081838089534 208.89940512589084,60.31081838089534\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"230.912327\" y=\"80.310818\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >360</text>\n",
       "  <text x=\"272.925249\" y=\"39.605112\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(-90,272.925249,39.605112)\">180</text>\n",
       "  <text x=\"189.449703\" y=\"70.861116\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,189.449703,70.861116)\">35</text>\n",
       "</svg>\n",
       "        </td>\n",
       "    </tr>\n",
       "</table></div></div></li><li class='xr-section-item'><input id='section-d423318f-2c13-44a7-9059-b7d387f0581f' class='xr-section-summary-in' type='checkbox'  checked><label for='section-d423318f-2c13-44a7-9059-b7d387f0581f' class='xr-section-summary' >Coordinates: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>latitude</span></div><div class='xr-var-dims'>(latitude)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-89.5 -88.5 -87.5 ... 88.5 89.5</div><input id='attrs-981ecba6-79d8-408b-ba7b-7ad9584edf59' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-981ecba6-79d8-408b-ba7b-7ad9584edf59' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-5ab4bc62-f3b1-4821-9e8d-a3f820a4787e' class='xr-var-data-in' type='checkbox'><label for='data-5ab4bc62-f3b1-4821-9e8d-a3f820a4787e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>axis :</span></dt><dd>Y</dd><dt><span>bounds :</span></dt><dd>lat_bnds</dd><dt><span>cell_methods :</span></dt><dd>time: point</dd><dt><span>long_name :</span></dt><dd>latitude</dd><dt><span>standard_name :</span></dt><dd>latitude</dd><dt><span>units :</span></dt><dd>degrees_north</dd></dl></div><div class='xr-var-data'><pre>array([-89.5, -88.5, -87.5, -86.5, -85.5, -84.5, -83.5, -82.5, -81.5, -80.5,\n",
       "       -79.5, -78.5, -77.5, -76.5, -75.5, -74.5, -73.5, -72.5, -71.5, -70.5,\n",
       "       -69.5, -68.5, -67.5, -66.5, -65.5, -64.5, -63.5, -62.5, -61.5, -60.5,\n",
       "       -59.5, -58.5, -57.5, -56.5, -55.5, -54.5, -53.5, -52.5, -51.5, -50.5,\n",
       "       -49.5, -48.5, -47.5, -46.5, -45.5, -44.5, -43.5, -42.5, -41.5, -40.5,\n",
       "       -39.5, -38.5, -37.5, -36.5, -35.5, -34.5, -33.5, -32.5, -31.5, -30.5,\n",
       "       -29.5, -28.5, -27.5, -26.5, -25.5, -24.5, -23.5, -22.5, -21.5, -20.5,\n",
       "       -19.5, -18.5, -17.5, -16.5, -15.5, -14.5, -13.5, -12.5, -11.5, -10.5,\n",
       "        -9.5,  -8.5,  -7.5,  -6.5,  -5.5,  -4.5,  -3.5,  -2.5,  -1.5,  -0.5,\n",
       "         0.5,   1.5,   2.5,   3.5,   4.5,   5.5,   6.5,   7.5,   8.5,   9.5,\n",
       "        10.5,  11.5,  12.5,  13.5,  14.5,  15.5,  16.5,  17.5,  18.5,  19.5,\n",
       "        20.5,  21.5,  22.5,  23.5,  24.5,  25.5,  26.5,  27.5,  28.5,  29.5,\n",
       "        30.5,  31.5,  32.5,  33.5,  34.5,  35.5,  36.5,  37.5,  38.5,  39.5,\n",
       "        40.5,  41.5,  42.5,  43.5,  44.5,  45.5,  46.5,  47.5,  48.5,  49.5,\n",
       "        50.5,  51.5,  52.5,  53.5,  54.5,  55.5,  56.5,  57.5,  58.5,  59.5,\n",
       "        60.5,  61.5,  62.5,  63.5,  64.5,  65.5,  66.5,  67.5,  68.5,  69.5,\n",
       "        70.5,  71.5,  72.5,  73.5,  74.5,  75.5,  76.5,  77.5,  78.5,  79.5,\n",
       "        80.5,  81.5,  82.5,  83.5,  84.5,  85.5,  86.5,  87.5,  88.5,  89.5])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lev</span></div><div class='xr-var-dims'>(lev)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>2.5 10.0 20.0 ... 6e+03 6.5e+03</div><input id='attrs-3baad314-b69e-4214-8689-8330443a6713' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-3baad314-b69e-4214-8689-8330443a6713' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-65ea7767-e3d9-4a5c-8c8b-72154d5e494f' class='xr-var-data-in' type='checkbox'><label for='data-65ea7767-e3d9-4a5c-8c8b-72154d5e494f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>axis :</span></dt><dd>Z</dd><dt><span>bounds :</span></dt><dd>lev_bnds</dd><dt><span>description :</span></dt><dd>generic ocean model vertical coordinate (nondimensional or dimensional)</dd><dt><span>long_name :</span></dt><dd>ocean model level</dd><dt><span>positive :</span></dt><dd>down</dd><dt><span>units :</span></dt><dd>m</dd></dl></div><div class='xr-var-data'><pre>array([2.5000e+00, 1.0000e+01, 2.0000e+01, 3.2500e+01, 5.1250e+01, 7.5000e+01,\n",
       "       1.0000e+02, 1.2500e+02, 1.5625e+02, 2.0000e+02, 2.5000e+02, 3.1250e+02,\n",
       "       4.0000e+02, 5.0000e+02, 6.0000e+02, 7.0000e+02, 8.0000e+02, 9.0000e+02,\n",
       "       1.0000e+03, 1.1000e+03, 1.2000e+03, 1.3000e+03, 1.4000e+03, 1.5375e+03,\n",
       "       1.7500e+03, 2.0625e+03, 2.5000e+03, 3.0000e+03, 3.5000e+03, 4.0000e+03,\n",
       "       4.5000e+03, 5.0000e+03, 5.5000e+03, 6.0000e+03, 6.5000e+03])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>longitude</span></div><div class='xr-var-dims'>(longitude)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.5 1.5 2.5 ... 357.5 358.5 359.5</div><input id='attrs-a4da7c2e-ece1-4525-9b84-57d254a26077' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-a4da7c2e-ece1-4525-9b84-57d254a26077' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ead7fb40-f323-4e91-b909-1f0a0745929e' class='xr-var-data-in' type='checkbox'><label for='data-ead7fb40-f323-4e91-b909-1f0a0745929e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>axis :</span></dt><dd>X</dd><dt><span>bounds :</span></dt><dd>lon_bnds</dd><dt><span>cell_methods :</span></dt><dd>time: point</dd><dt><span>long_name :</span></dt><dd>longitude</dd><dt><span>standard_name :</span></dt><dd>longitude</dd><dt><span>units :</span></dt><dd>degrees_east</dd></dl></div><div class='xr-var-data'><pre>array([  0.5,   1.5,   2.5, ..., 357.5, 358.5, 359.5])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>time</span></div><div class='xr-var-dims'>(time)</div><div class='xr-var-dtype'>object</div><div class='xr-var-preview xr-preview'>2015-01-16 12:00:00 ... 2100-12-...</div><input id='attrs-171b3ffd-15f6-4c9e-81d1-ffe0c73695f9' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-171b3ffd-15f6-4c9e-81d1-ffe0c73695f9' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c715006e-d5c5-4d5e-b21d-703ac539793f' class='xr-var-data-in' type='checkbox'><label for='data-c715006e-d5c5-4d5e-b21d-703ac539793f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>axis :</span></dt><dd>T</dd><dt><span>bounds :</span></dt><dd>time_bnds</dd><dt><span>calendar_type :</span></dt><dd>noleap</dd><dt><span>description :</span></dt><dd>Temporal mean</dd><dt><span>long_name :</span></dt><dd>time</dd><dt><span>standard_name :</span></dt><dd>time</dd></dl></div><div class='xr-var-data'><pre>array([cftime.DatetimeNoLeap(2015, 1, 16, 12, 0, 0, 0, has_year_zero=True),\n",
       "       cftime.DatetimeNoLeap(2015, 2, 15, 0, 0, 0, 0, has_year_zero=True),\n",
       "       cftime.DatetimeNoLeap(2015, 3, 16, 12, 0, 0, 0, has_year_zero=True),\n",
       "       ...,\n",
       "       cftime.DatetimeNoLeap(2100, 10, 16, 12, 0, 0, 0, has_year_zero=True),\n",
       "       cftime.DatetimeNoLeap(2100, 11, 16, 0, 0, 0, 0, has_year_zero=True),\n",
       "       cftime.DatetimeNoLeap(2100, 12, 16, 12, 0, 0, 0, has_year_zero=True)],\n",
       "      dtype=object)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-ec0a1e77-6b21-4158-a306-fae9db2282b7' class='xr-section-summary-in' type='checkbox'  ><label for='section-ec0a1e77-6b21-4158-a306-fae9db2282b7' class='xr-section-summary' >Indexes: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>latitude</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-13345233-a7fe-4989-b3e2-aac794a1267d' class='xr-index-data-in' type='checkbox'/><label for='index-13345233-a7fe-4989-b3e2-aac794a1267d' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([-89.5, -88.5, -87.5, -86.5, -85.5, -84.5, -83.5, -82.5, -81.5, -80.5,\n",
       "       ...\n",
       "        80.5,  81.5,  82.5,  83.5,  84.5,  85.5,  86.5,  87.5,  88.5,  89.5],\n",
       "      dtype=&#x27;float64&#x27;, name=&#x27;latitude&#x27;, length=180))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>lev</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-b4f8210a-7f3c-45bc-99ed-ca5d178ae506' class='xr-index-data-in' type='checkbox'/><label for='index-b4f8210a-7f3c-45bc-99ed-ca5d178ae506' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([   2.5,   10.0,   20.0,   32.5,  51.25,   75.0,  100.0,  125.0, 156.25,\n",
       "        200.0,  250.0,  312.5,  400.0,  500.0,  600.0,  700.0,  800.0,  900.0,\n",
       "       1000.0, 1100.0, 1200.0, 1300.0, 1400.0, 1537.5, 1750.0, 2062.5, 2500.0,\n",
       "       3000.0, 3500.0, 4000.0, 4500.0, 5000.0, 5500.0, 6000.0, 6500.0],\n",
       "      dtype=&#x27;float64&#x27;, name=&#x27;lev&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>longitude</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-97574619-df8b-4a7b-bd09-012ef0548a42' class='xr-index-data-in' type='checkbox'/><label for='index-97574619-df8b-4a7b-bd09-012ef0548a42' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([               0.5, 1.5000000000000002,                2.5,\n",
       "                      3.5,                4.5,                5.5,\n",
       "                      6.5,  7.499999999999999,                8.5,\n",
       "                      9.5,\n",
       "       ...\n",
       "       350.50000000000006,              351.5,              352.5,\n",
       "                    353.5,              354.5,              355.5,\n",
       "                    356.5,              357.5,              358.5,\n",
       "       359.50000000000006],\n",
       "      dtype=&#x27;float64&#x27;, name=&#x27;longitude&#x27;, length=360))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>time</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-14fcf37f-c5e3-4ee2-b365-f2f07503f390' class='xr-index-data-in' type='checkbox'/><label for='index-14fcf37f-c5e3-4ee2-b365-f2f07503f390' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(CFTimeIndex([2015-01-16 12:00:00, 2015-02-15 00:00:00, 2015-03-16 12:00:00,\n",
       "             2015-04-16 00:00:00, 2015-05-16 12:00:00, 2015-06-16 00:00:00,\n",
       "             2015-07-16 12:00:00, 2015-08-16 12:00:00, 2015-09-16 00:00:00,\n",
       "             2015-10-16 12:00:00,\n",
       "             ...\n",
       "             2100-03-16 12:00:00, 2100-04-16 00:00:00, 2100-05-16 12:00:00,\n",
       "             2100-06-16 00:00:00, 2100-07-16 12:00:00, 2100-08-16 12:00:00,\n",
       "             2100-09-16 00:00:00, 2100-10-16 12:00:00, 2100-11-16 00:00:00,\n",
       "             2100-12-16 12:00:00],\n",
       "            dtype=&#x27;object&#x27;, length=1032, calendar=&#x27;noleap&#x27;, freq=&#x27;None&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-b22c1891-485b-4a5b-9e02-023ef0fc6803' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-b22c1891-485b-4a5b-9e02-023ef0fc6803' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.DataArray (time: 1032, lev: 35, latitude: 180, longitude: 360)>\n",
       "dask.array<sub, shape=(1032, 35, 180, 360), dtype=float32, chunksize=(13, 35, 180, 360), chunktype=numpy.ndarray>\n",
       "Coordinates:\n",
       "  * latitude   (latitude) float64 -89.5 -88.5 -87.5 -86.5 ... 87.5 88.5 89.5\n",
       "  * lev        (lev) float64 2.5 10.0 20.0 32.5 ... 5e+03 5.5e+03 6e+03 6.5e+03\n",
       "  * longitude  (longitude) float64 0.5 1.5 2.5 3.5 ... 356.5 357.5 358.5 359.5\n",
       "  * time       (time) object 2015-01-16 12:00:00 ... 2100-12-16 12:00:00"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "AOU_SSP126=O2_SSP126-O2_sat_SSP126\n",
    "AOU_SSP245=O2_SSP245-O2_sat_SSP245\n",
    "AOU_SSP585=O2_SSP585-O2_sat_SSP585\n",
    "AOU_SSP585"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "385d7f81-85c1-4ad3-98a8-8fca8507890f",
   "metadata": {},
   "outputs": [],
   "source": [
    "AOU_d126=(AOU_SSP126.sel(time=slice('2081-01-16','2100-12-16')).mean(dim='time'))-(\n",
    "    AOU_SSP126.sel(time=slice('2015-01-16','2025-12-16')).mean(dim='time'))\n",
    "AOU_d245=(AOU_SSP245.sel(time=slice('2081-01-16','2100-12-16')).mean(dim='time'))-(\n",
    "    AOU_SSP245.sel(time=slice('2015-01-16','2025-12-16')).mean(dim='time'))\n",
    "AOU_d585=(AOU_SSP585.sel(time=slice('2081-01-16','2100-12-16')).mean(dim='time'))-(\n",
    "    AOU_SSP585.sel(time=slice('2015-01-16','2025-12-16')).mean(dim='time'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "ff936dfc-dd2e-40a5-a937-77ff170fb0ad",
   "metadata": {},
   "outputs": [],
   "source": [
    "import xarray as xr\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy\n",
    "import cartopy.crs as ccrs\n",
    "import cmocean "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "19fca8ce-4211-4424-af3a-99e1deb95027",
   "metadata": {},
   "outputs": [],
   "source": [
    "esm4_basins = xr.open_dataset('../data/basins/esm4_basins_gr.nc').basins"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "9b8066e9-3542-4c73-99a5-26fd9d956b4a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Ocean Basin Mask')"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x800 with 2 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 426,
       "width": 863
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "subplot_kws = dict(projection=ccrs.Robinson(central_longitude=-120),facecolor='grey')\n",
    "\n",
    "plt.figure(figsize=[12,8])\n",
    "\n",
    "p =esm4_basins.plot.contourf(x='longitude',y='latitude',\n",
    "                         cmap='tab20c',\n",
    "                         vmin=0,vmax=11,levels=12,\n",
    "                         subplot_kws = subplot_kws,\n",
    "                         transform=ccrs.PlateCarree(),\n",
    "                         add_colorbar=False)\n",
    "\n",
    "# add separate colorbar\n",
    "cb = plt.colorbar(p, ticks=[1,2,3,4,5,6,7,8,9,10,11], shrink=0.6)\n",
    "cb.ax.tick_params(labelsize=14)\n",
    "plt.title(\"Ocean Basin Mask\",fontsize=20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "fb9655d9-1bcf-409f-b9d9-fd3a0cb90165",
   "metadata": {},
   "outputs": [],
   "source": [
    "southernocean = (esm4_basins.where(esm4_basins==1) /  esm4_basins.where(esm4_basins==1)) ### Values 1 over atlantic, NaN elsewhere\n",
    "atlanticocean = (esm4_basins.where(esm4_basins==2) / esm4_basins.where(esm4_basins==2)) ### Values 1 over atlantic, NaN elsewhere\n",
    "pacificocean =  (esm4_basins.where(esm4_basins==3) / esm4_basins.where(esm4_basins==3))\n",
    "articocean = (esm4_basins.where(esm4_basins==4) / esm4_basins.where(esm4_basins==4))\n",
    "indianocean = (esm4_basins.where(esm4_basins==5) / esm4_basins.where(esm4_basins==5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fd00746c-cd13-4d29-8de2-9a81b3ad857e",
   "metadata": {},
   "outputs": [],
   "source": [
    "subplot_kws=dict(projection=ccrs.Mollweide(),\n",
    "                 facecolor='papayawhip')\n",
    "\n",
    "fig, (ax)=plt.subplots(ncols=2,nrows=3, figsize=(10,5),subplot_kw=subplot_kws)\n",
    "(O2*southernocean).mean(dim='lev').mean(dim='time').plot(ax=ax[0,0],\n",
    "                              transform=ccrs.PlateCarree())\n",
    "(O2*atlanticocean).mean(dim='lev').mean(dim='time').plot(ax=ax[0,1],\n",
    "                                transform=ccrs.PlateCarree())\n",
    "(O2*pacificocean).mean(dim='lev').mean(dim='time').plot(ax=ax[1,0],\n",
    "                              transform=ccrs.PlateCarree())\n",
    "(O2*arcticocean).mean(dim='lev').mean(dim='time').plot(ax=ax[1,1],\n",
    "                              transform=ccrs.PlateCarree())\n",
    "(O2*indianocean).mean(dim='lev').mean(dim='time').plot(ax=ax[2,0],\n",
    "                              transform=ccrs.PlateCarree())\n",
    "O2.mean(dim='lev').mean(dim='time').plot(ax=ax[2,1],\n",
    "                              transform=ccrs.PlateCarree())\n",
    "\n",
    "ax[0,0].set_title('Southern Ocean')\n",
    "ax[0,1].set_title('Atlantic Ocean')\n",
    "ax[1,0].set_title('Pacific Ocean')\n",
    "ax[1,1].set_title('Arctic Ocean')\n",
    "ax[2,0].set_title('Indian Ocean')\n",
    "ax[2,1].set_title('Global')\n",
    "\n",
    "fig.suptitle('Projected Dissolved Oxygen Averaged Across 2015-2100 and Average Depth')\n",
    "plt.tight_layout()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "d8460e82-9f2a-4ee5-b4b0-ba90d8267240",
   "metadata": {},
   "outputs": [],
   "source": [
    "O2_southern1 = (O2_SSP585*southernocean).sel(latitude=slice(-90,0)).mean(dim=['latitude','longitude']).sel(time=slice('2015-01-16','2035-12-16')).groupby('time.month').mean(dim='time').mean(dim='lev')\n",
    "O2_southern2 = (O2_SSP585*southernocean).sel(latitude=slice(-90,0)).mean(dim=['latitude','longitude']).sel(time=slice('2080-01-16','2100-12-16')).groupby('time.month').mean(dim='time').mean(dim='lev') \n",
    "s02_diff = O2_southern2-O2_southern1\n",
    "\n",
    "at02_diff = ((O2_SSP585*atlanticocean).mean(dim=['latitude','longitude']).sel(time=slice('2080-01-16','2100-12-16')).groupby('time.month').mean(dim='time').mean(dim='lev'))- ((O2_SSP585*atlanticocean).mean(\n",
    "    dim=['latitude','longitude']).sel(time=slice('2015-01-16','2035-12-16')).groupby('time.month').mean(dim='time').mean(dim='lev'))\n",
    "\n",
    "p02_diff = ((O2_SSP585*pacificocean).mean(dim=['latitude','longitude']).sel(time=slice('2080-01-16','2100-12-16')).groupby('time.month').mean(dim='time').mean(dim='lev'))- ((O2_SSP585*pacificocean).mean(\n",
    "    dim=['latitude','longitude']).sel(time=slice('2015-01-16','2035-12-16')).groupby('time.month').mean(dim='time').mean(dim='lev'))\n",
    "\n",
    "ar02_diff = ((O2_SSP585*articocean).mean(dim=['latitude','longitude']).sel(time=slice('2080-01-16','2100-12-16')).groupby('time.month').mean(dim='time').mean(dim='lev'))-((O2_SSP585*articocean).mean(\n",
    "    dim=['latitude','longitude']).sel(time=slice('2015-01-16','2035-12-16')).groupby('time.month').mean(dim='time').mean(dim='lev'))\n",
    "\n",
    "i02_diff = ((O2_SSP585*indianocean).mean(dim=['latitude','longitude']).sel(time=slice('2080-01-16','2100-12-16')).groupby('time.month').mean(dim='time').mean(dim='lev')) - ((O2_SSP585*indianocean).mean(\n",
    "    dim=['latitude','longitude']).sel(time=slice('2015-01-16','2035-12-16')).groupby('time.month').mean(dim='time').mean(dim='lev'))\n",
    "#plot the first 20 years 2015-2035 and last 20 (2080-2100)  \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "025bbc50-140c-42f3-8e6d-fe6991dbaef6",
   "metadata": {},
   "outputs": [],
   "source": [
    "O2_585_atlantic = (O2_SSP585*atlanticocean).mean(dim=['latitude','longitude']).sel(time=slice('2015-01-16','2100-12-16')).groupby(\n",
    "    'time.month').mean(dim='time').mean(dim='lev')\n",
    "\n",
    "O2_585_pacific = (O2_SSP585*pacificocean).mean(dim=['latitude','longitude']).sel(time=slice('2015-01-16','2100-12-16')).groupby(\n",
    "    'time.month').mean(dim='time').mean(dim='lev')\n",
    "\n",
    "O2_585_arctic = (O2_SSP585*articocean).mean(dim=['latitude','longitude']).sel(time=slice('2015-01-16','2100-12-16')).groupby(\n",
    "    'time.month').mean(dim='time').mean(dim='lev')\n",
    "\n",
    "O2_585_indian = (O2_SSP585*indianocean).mean(dim=['latitude','longitude']).sel(time=slice('2015-01-16','2100-12-16')).groupby(\n",
    "    'time.month').mean(dim='time').mean(dim='lev')\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "7a476ffc-45dc-4799-b28a-757d9364ef4d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7f17b900c9a0>]"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 525,
       "width": 1011
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "s02_diff.plot()\n",
    "at02_diff.plot()\n",
    "p02_diff.plot()\n",
    "ar02_diff.plot()\n",
    "i02_diff.plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8e08949f-6ffe-4bea-a916-0d05f2061504",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.18"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
